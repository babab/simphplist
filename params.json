{"name":"Simphplist","tagline":"PHP mini-framework with anti-framework features","body":"# Simphplist\r\n\r\nSimphplist is a mini-framework with anti-framework features. A\r\ncollection of losely coupled components, that helps you with shortcuts\r\nand clean API's for writing the most common idioms when developing web\r\napplications in PHP (MySQL handling, object mapper, authentication,\r\nvalidation, typechecking).\r\n\r\nYou can use it as a minimalistic base for writing custom (frameworks\r\nfor) applications. Simphplist is carefully designed to allow using it\r\nalongside any other (custom) framework.\r\n\r\n## Features / Components\r\n\r\nSimphplist is in the initial stages of development. Some components may\r\nbe actually useful already though.\r\n\r\nCheckout the API documentation here: http://simphplist.org/annotated.html\r\n\r\n- DB\\MysqlHandler\r\n\r\n  MySQL handler with table prefix support\r\n  [25% done of which 50% documented]\r\n\r\n- DB\\Model\r\n\r\n  Simplistic MySQL Object Mapper\r\n  [20% done of which 0% documented]\r\n\r\n- Debug\r\n\r\n  Static methods for dumping vars to a file or screen (html or text)\r\n  [100% done of which 100% documented]\r\n\r\n- Json\r\n\r\n  Shortcuts for common idioms in JSON interaction\r\n  [50% done of which 0% documented]\r\n\r\n- Request\r\n\r\n  Static methods for secure user input handling via REQUEST superglobal(s):\r\n  (GET, POST, COOKIE)\r\n  [30% done of which 0% documented]\r\n\r\n- Route\r\n\r\n  Minimalistic, flexible and extensible routing\r\n  [50% done of which 80% documented]\r\n\r\n- String\r\n\r\n  Static methods for common string manipulation / parsing tasks\r\n  [60% done of which 20% documented]\r\n\r\n- Validate\r\n\r\n  Clean static API for type checking and validation\r\n  [10% done of which 100% documented]\r\n\r\n\r\n## Overview\r\n\r\n### Routing\r\n\r\nindex.php:\r\n\r\n```php\r\n\r\n   <?php\r\n   // -- Include composer for autoloading Simphplist\r\n\r\n   (new \\Babab\\Simphplist\\Route)\r\n\r\n   // Set a prefix to test in PHP's built in webserver\r\n   ->setPrefix('/index.php')\r\n\r\n   ->when('/articles/archive/{year}/{month}/', function($args) {\r\n      echo 'Archives: year \"' . $args->year . '\"';\r\n      echo 'Month \"' . $args->month . '\"';\r\n   })\r\n   ->when('/articles/{id}/', function($args) {\r\n      echo 'Welcome to article \"' . $args->id . '\"';\r\n   })\r\n   ->when('/articles/', function($args) {\r\n      echo 'Welcome to the article list';\r\n   })\r\n   ->other(function() {\r\n      echo 'No other matches found, this could be a 404 page';\r\n      // or a redirect\r\n      // \\Babab\\Simphplist\\Route::redirect('/index.php/articles/');\r\n   });\r\n```\r\n\r\n## License\r\n\r\nCopyright (c) 2014  Benjamin Althues <benjamin@babab.nl>\r\n\r\nPermission to use, copy, modify, and distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}